CREATE TYPE work_description AS ENUM (
    'MIXING',
    'MASTERING',
    'PRODUCING',
    'EDITING',
    'WRITING'
    );

CREATE TABLE IF NOT EXISTS request
(
    request_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    request_name     VARCHAR(128)             NOT NULL,
    band_name        VARCHAR(128)             NOT NULL,
    band_email       VARCHAR(128)             NOT NULL,
    work_description work_description[]       NOT NULL,
    count_of_track   INT                      NOT NULL,
    deadline         TIMESTAMP WITH TIME ZONE NOT NULL,
    multitrack_link  VARCHAR                  NOT NULL,
    total_amount     DECIMAL                  NULL,
    request_status   VARCHAR
);

COMMENT ON TABLE request IS
    'таблица заявок';
COMMENT ON COLUMN request.request_id IS
    'id заявки';
COMMENT ON COLUMN request.request_name IS
    'имя заявки';
COMMENT ON COLUMN request.band_name IS
    'название исполнителя, который оставляет заявку';
COMMENT ON COLUMN request.band_email IS
    'email исполнителя, который оставляет заявку';
COMMENT ON COLUMN request.work_description IS
    'список заказываемых услуг';
COMMENT ON COLUMN request.count_of_track IS
    'количество песен в заказе';
COMMENT ON COLUMN request.deadline IS
    'срок сдачи заказа';
COMMENT ON COLUMN request.multitrack_link IS
    'ссылка на исходные материалы';
COMMENT ON COLUMN request.total_amount IS
    'общая сумма заказа';
COMMENT ON COLUMN request.request_status IS
    'статус заявки';

CREATE TABLE IF NOT EXISTS release
(
    release_id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    band_name           VARCHAR(128)             NOT NULL,
    release_name        VARCHAR(128)             NULL,
    work_description    work_description[]       NOT NULL,
    count_of_track      INT                      NOT NULL,
    release_dttm        TIMESTAMP WITH TIME ZONE NULL,
    genre               VARCHAR                  NOT NULL,
    album_cover_link    VARCHAR                  NULL,
    social_network_link VARCHAR                  NULL,
    music_label         VARCHAR(128)             NULL,
    request_id          BIGINT                   NOT NULL UNIQUE
);

ALTER TABLE release
    ADD CONSTRAINT fk_release_for_request FOREIGN KEY (request_id)
        REFERENCES request (request_id)
        ON DELETE RESTRICT ON UPDATE RESTRICT;

COMMENT ON TABLE release IS
    'таблица релизов';
COMMENT ON COLUMN release.release_id IS
    'id релиза';
COMMENT ON COLUMN release.band_name IS
    'название исполнителя';
COMMENT ON COLUMN release.release_name IS
    'название релиза';
COMMENT ON COLUMN release.work_description IS
    'список выполненных услуг';
COMMENT ON COLUMN release.count_of_track IS
    'количество песен в заказе';
COMMENT ON COLUMN release.release_dttm IS
    'дата выхода релиза';
COMMENT ON COLUMN release.genre IS
    'жанр релиза';
COMMENT ON COLUMN release.album_cover_link IS
    'обложка релиза';
COMMENT ON COLUMN release.music_label IS
    'лейбл на котором выпускается релиз';

CREATE TABLE IF NOT EXISTS price
(
    price_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mixing          NUMERIC NULL,
    mastering       NUMERIC NULL,
    editing         NUMERIC NULL,
    producing       NUMERIC NULL,
    discount        NUMERIC NULL,
    number_of_songs BIGINT  NULL,
    request_id      BIGINT  NOT NULL
);

ALTER TABLE price
    ADD CONSTRAINT fk_price_for_request FOREIGN KEY (request_id)
        REFERENCES request (request_id)
        ON DELETE RESTRICT ON UPDATE RESTRICT;

COMMENT ON TABLE price IS
    'Таблица расчета цены за работу';
COMMENT ON COLUMN price.price_id IS
    'Ид цены';
COMMENT ON COLUMN price.mixing IS
    'Цена сведения';
COMMENT ON COLUMN price.mastering IS
    'Цена мастеринга';
COMMENT ON COLUMN price.editing IS
    'Цена редактирования';
COMMENT ON COLUMN price.producing IS
    'Цена продюсирования';
COMMENT ON COLUMN price.discount IS
    'Скидка в процентах';
COMMENT ON COLUMN price.number_of_songs IS
    'Количество песен';


CREATE TABLE IF NOT EXISTS studio
(
    studio_id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    studio_name         VARCHAR(128) NOT NULL,
    studio_place        TEXT         NULL,
    social_network_link TEXT         NULL
);

COMMENT ON TABLE studio IS
    'Таблица студии на которой записывался инструмент';
COMMENT ON COLUMN studio.studio_name IS
    'Название студии';
COMMENT ON COLUMN studio.studio_place IS
    'Местоположение студии';
COMMENT ON COLUMN studio.social_network_link IS
    'Ссылка на студию';

CREATE TABLE IF NOT EXISTS instrument
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type                VARCHAR(50)  NOT NULL,
    instrument_property VARCHAR(128) NOT NULL,
    instrument_model    VARCHAR(128) NULL,
    instrument_img      TEXT         NULL,
    studio_id           BIGINT       NOT NULL,
    release_id          BIGINT       NOT NULL
);

ALTER TABLE instrument
    ADD CONSTRAINT fk_instrument_for_release FOREIGN KEY (release_id)
        REFERENCES release (release_id)
        ON DELETE RESTRICT ON UPDATE RESTRICT,
    ADD CONSTRAINT fk_instrument_for_studio FOREIGN KEY (studio_id)
        REFERENCES studio (studio_id)
        ON DELETE CASCADE ON UPDATE CASCADE;

COMMENT ON TABLE instrument IS
    'базовая таблица инструментов для остальных таблиц инструментов';
COMMENT ON COLUMN instrument.type IS
    'тип инструмента';
COMMENT ON COLUMN instrument.instrument_property IS
    'характеристика инструмента, например перкуссия или струнный';
COMMENT ON COLUMN instrument.instrument_model IS
    'модель инструмента';
COMMENT ON COLUMN instrument.instrument_img IS
    'скрин или фото цепочки эффектов инструмента';


CREATE TABLE IF NOT EXISTS drums
(
    id         BIGINT PRIMARY KEY,
    drums_mics TEXT NULL,
    FOREIGN KEY (id) REFERENCES instrument (id) ON DELETE CASCADE
);

COMMENT ON TABLE drums IS
    'таблица информации о барабанах';
COMMENT ON COLUMN drums.id IS
    'id барабанов';
COMMENT ON COLUMN drums.drums_mics IS
    'микрофоны поканально';

CREATE TABLE IF NOT EXISTS guitar
(
    id           BIGINT PRIMARY KEY,
    signal_chain TEXT NULL,
    FOREIGN KEY (id) REFERENCES instrument (id) ON DELETE CASCADE
);

COMMENT ON TABLE guitar IS
    'таблица гитар';
COMMENT ON COLUMN guitar.id IS
    'id гитары';

CREATE TABLE IF NOT EXISTS vocal
(
    id              BIGINT PRIMARY KEY,
    vocal_technique VARCHAR(128) NULL,
    vocal_mic       VARCHAR(128) NULL,
    FOREIGN KEY (id) REFERENCES instrument (id) ON DELETE CASCADE
);

COMMENT ON TABLE vocal IS
    'таблица вокалов';
COMMENT ON COLUMN vocal.id IS
    'id вокалов';
COMMENT ON COLUMN vocal.vocal_technique IS
    'техника исполнения';
COMMENT ON COLUMN vocal.vocal_mic IS
    'какой микрофон использовался на записи';

CREATE TABLE IF NOT EXISTS other_instrument
(
    id     BIGINT PRIMARY KEY,
    preset TEXT NULL,
    FOREIGN KEY (id) REFERENCES instrument (id) ON DELETE CASCADE
);
COMMENT ON TABLE other_instrument IS
    'таблица инструментов без определенного типа';
COMMENT ON COLUMN other_instrument.id IS
    'id инструмента без определенного типа';
COMMENT ON COLUMN other_instrument.preset IS
    'предустановка';
